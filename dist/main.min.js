const openItem = item =>{
const container = item.closest('.team__item')
const contentBlock = container.find('.team__about')
const textBlock = contentBlock.find('.team__about-block')
const reqHeight = textBlock.height()
const descPolygon = container.find('.team__desc')
container.addClass('active')
contentBlock.height(reqHeight)
descPolygon.css('transform','rotate(60deg)')


}
const closeEveryItem = container =>{
  const items = container.find('.team__about')
  const itemContainer = container.find('.team__item')
  const descPolygon = container.find('.team__desc')
  descPolygon.css('transform','rotate(0deg)')
  itemContainer.removeClass('active')
  items.height(0)
}
$('.team__name').on('click',e=>{
  $this = $(e.currentTarget)
  // $('.team__name').css({'color':'#fff934'})
  const container = $this.closest('.team')
  const elemContainer = $this.closest('.team__item')
  if (elemContainer.hasClass('active')){
    closeEveryItem(container)
  }else{
    closeEveryItem(container)
    openItem($this)
  
  }


});let hamburgerMenu = document.querySelector("#burgerMenu");
let hamburgerButton = document.querySelector("#burger");
hamburgerButton.addEventListener("click", function (e) {
  e.preventDefault();
  hamburgerButton.classList.toggle("burger--active");
  hamburgerMenu.classList.toggle("menu--active");
  document.body.classList.toggle("fancybox-active");
  document.body.classList.toggle("compensate-for-scrollbar");
});

let prevButton = document.querySelector(".boards__nav--prev");
let nextButton = document.querySelector(".boards__nav--next");
let slide = document.querySelector(".boards");
// nextButton.addEventListener('click', function(e){
//   e.preventDefault()
//   slide.classList.toggle('.boards_container--active')
// }

// )
// console.log(prevButton);

//   if (
//     hamburgerButton.classList.contains("burger--active") == true &&
//     hamburgerMenu.classList.contains("burger--active") == true
//   ) {
//     hamburgerButton.classList. ove == "burger--active";
//     hamburgerMenu.classList. ove == "menu--active";
//   } else if (
//     hamburgerButton.classList.contains("burger--active") != true &&
//     hamburgerMenu.classList.contains("burger--active") != true
//   ) {
//       hamburgerButton.classList.add("burger--active");
//       hamburgerMenu.classList.add("menu--active");
//   }
// });

// let form = document.querySelector(".form");
// let formElements = form.elements;
// let button = formElements[11];

// button.addEventListener("click", function (e) {
//   e.preventDefault();
//   let userName = formElements[0].value;
//   let phone = formElements[1].value;
//   let adress =
//     "ул. " +
//     formElements[2].value +
//     " " +
//     "дом. " +
//     formElements[3].value +
//     " " +
//     "корп." +
//     formElements[4].value +
//     " " +
//     "кв. " +
//     formElements[5].value +
//     " " +
//     "эт. " +
//     formElements[6].value;
//   let comment = formElements[7].value;
//   if (formElements[8].checked == true) {
//     paymant = "Оплата наличными";
//   } else {
//     paymant = "Оплата картой";
//   }
//   alert(userName + phone + " " + adress + " " + paymant + " " + comment);
//   console.log(formElements);
//   console.log(userName, phone, adress, paymant, comment);
// });
// $(document).ready(() => {
//   $(".form__btn").on("click", (e) => {
//     e.preventDefault();
//     let formTitle = $(".form__title");
//     let formInput = $(".form__input");
//     // $.each(formTitle),(ndx, item ) =>{
//     //   let formTitleElements= $(item)[ndx].innerText
//     //   console.log(formTitleElements)
//     // }
//     for (let i = 0; i < formTitle.length; i++) {
//       let formTitleElements = formTitle[i].innerText;
//       let formInputValues = $(formInput[i + 1]).val();
//       let result = formTitleElements + ": " + formInputValues;
//       console.log(result);
//     }
//   });
// });
;let myMap;

const init = () => {
  myMap = new ymaps.Map("map", {
    center: [59.935274, 30.312388],
    zoom: 11,
  });
  const coords = [
    [59.94554327989287, 30.38935262114668],
    [59.91142323563909, 30.50024587065841],
    [59.88693161784606, 30.319658102103713],
    [59.97033574821672, 30.315194906302924],
  ];
  const myCollection = new ymaps.GeoObjectCollection(
    {},
    {
      draggable: false,
      iconLayout: "default#image",
      iconImageHref: "./img/marker.svg",
      iconImageSize: [46, 57],
      iconImageOffset: [-35, -52],
    }
  );
  coords.forEach((coord) => {
    myCollection.add(new ymaps.Placemark(coord));
  });

  myMap.geoObjects.add(myCollection);
  myMap.behaviors.disable("scrollZoom");
};

ymaps.ready(init);
;const validateFields = (form, fieldsArray) => {
  fieldsArray.forEach((field) => {
    field.removeClass("input-error");
    if (field.val().trim() === "") {
      field.addClass("input-error");
    }
  });
  const errorFields = form.find(".input-error");
  return errorFields.length === 0;
};

$(".form__btn").on('click',(e) => {
  e.preventDefault();

  const form = $(".form");
  const name = form.find("[name = 'name']");
  const phone = form.find("[name = 'phone']");
  const comment = form.find(".form__input--textarea");
  const to = form.find("[name = 'to']");
  const content = $(".modal__content");
  isValid = validateFields(form, [name, phone, comment, to]);

  if (isValid) {
    const request = $.ajax({
      url: "https://webdev-api.loftschool.com/sendmail",
      method: "post",
      data: {
        name: name.val(),
        phone: phone.val(),
        comment: comment.val(),
        to: to.val(),
      },
    });
    request.done((data) => {
      content.removeClass("error-text");
      content.text(data.message);
    });
    request.fail((data) => {
      let message;
      if(data?.responseJSON?.message){
        message = responseJSON.message
      }else{
        message = 'Произошла ошибка,попробуйте позже'
      }
      content.text(message);
      content.addClass("error-text");
    });
    request.always(() => {
     $.fancybox.open({
      src:'#form-modal',
      type:'inline',
     })
    });
  }
});

$(".btn--close").on('click',(e) => {
  e.preventDefault();
  $.fancybox.close()
  // $(".form-modal").css({ height: "0%", width: "0%" });
});
;
//methods
// $.fn.fullpage.setAllowScrolling(false);

let doFullpage = document.documentElement.clientWidth;
$(document).ready(function () {
  //что бы не работал на мобилках
  // if (doFullpage > 768) {
    $("#fullpage").fullpage({
      //options here
      scrollOverflow: false,
      autoScrolling: true,
      scrollHorizontally: true,
      verticalCentered: false,
      fitToSection: false,
      navigation: true,
      // anchors:['#why', '#boards', '#reviews'],
      scrollOverflow: false,

      // fixedElements:('.header')
    });

  }
);
$("[data-scroll-to]").on('click',(e) => {
  e.preventDefault();
  const $this = $(e.currentTarget);
  const target = $this.attr("data-scroll-to");
  const reqSection = $(`[data-section-id = ${target}]`);

  performTransition(reqSection.index());
});

//----------------------------------------------------------------------------------------------------------//

const sections = $("section");
const display = $(".maincontent");
let inScroll = false;
sections.first().addClass("active");

const performTransition = (sectionEq) => {
  if (inScroll === false) {
    inScroll = true;
    const position = sectionEq * -100;
    display.css({
      transform: `translateY(${position}%)`,
    });
    sections.eq(sectionEq).addClass("active").siblings().removeClass("active");
    setTimeout(() => {
      inScroll = false;
    }, 800);
  }
};
// const viewportScroller = () => {
//   const activeSection = sections.filter(".active");
//   const nextSection = activeSection.next();
//   const prevSection = activeSection.prev();
//   return {
//     next() {
//       if (nextSection.length) {
//         performTransition(nextSection.index());
//       }
//     },
//     prev() {
//       if (prevSection.length) {
//         performTransition(prevSection.index());
//       }
//     },
//   };
// };
// $(window).on("wheel", (e) => {
//   const deltaY = e.originalEvent.deltaY;
//   const scroller = viewportScroller();
//   // let map = $('.map')
//   // console.log(map)
//   if (deltaY > 0) {
//     //&& e.target != map
//     //next
//     scroller.next();
//   }
//   if (deltaY < 0) {
//     //prev
//     scroller.prev();
//   }
// });
// $(window).on("keydown", (e) => {
//   const tagName = e.target.tagName.toLowerCase();
//   const scroller = viewportScroller();
//   if (tagName != "textarea" && tagName != "input") {
//     switch (e.key) {
//       case 38:
//         scroller.prev();
//         break;
//       case 40:
//         scroller.next();
//         break;
//     }
//   }
// });

// $("[data-scroll-to]").on('click',(e) => {
//   e.preventDefault();
//   const $this = $(e.currentTarget);
//   const target = $this.attr("data-scroll-to");
//   const reqSection = $(`[data-section-id = ${target}]`);

//   performTransition(reqSection.index());
// });

// //https://github.com/mattbryson/TouchSwipe-Jquery-Plugin
// $(function () {
//   $("body").swipe({

//     //Generic swipe handler for all directions
//     swipe: function (event, direction) {
//       const scroller = viewportScroller();
//       let scrollDirection = "";
//       if (direction === "up") {
//         scrollDirection = "next";
//       }
//       if (direction === "down") {
//         scrollDirection = "prev";
//       }
//       scroller[scrollDirection]();
//     },
//   });
// });
;// let player;
// const playerContainer = $(".player");
// const playerStart = $(".player__start");
// const playerSplash = $(".player__splash");
// ////play/pause////

// ////seconds to seconds:minutes////
// const formatTime = (timeSec) => {
//   const roundTime = Math.round(timeSec);

//   const minutes = addZero(Math.floor(roundTime / 60));
//   const seconds = addZero(roundTime - minutes * 60);

//   function addZero(num) {
//     return num < 10 ? `0${num}` : num;
//   }

//   return `${minutes} : ${seconds}`;
// };
// ////^seconds to seconds:minutes////

// ////duration////
// const onPlayerReady = () => {
//   const durationSec = player.getDuration();

//   $(".player__duration-estimate").text(formatTime(durationSec));
//   if (typeof interval !== "undefined") {
//     clearInterval(interval);
//   }
//   interval = setInterval(() => {
//     const completedSec = player.getCurrentTime();
//     const completedPercent = (completedSec / durationSec) * 100;
//     $(".player__playback-button").css({
//       left: `${completedPercent}%`,
//     });
//     $(".player__duration-completed").text(formatTime(completedSec));
//   }, 1000);
// };
// ////^duration////

// ////playbackButtonMove////
// $(".player__playback").click((e) => {
//   const bar = $(e.currentTarget);
//   const clickedPosition = e.originalEvent.layerX;
//   const newButtonPositionPercent = (clickedPosition / bar.width()) * 100;
//   const newPlaybackPositionSec =
//     (player.getDuration() / 100) * newButtonPositionPercent;

//   $(".player__playback-button").css({
//     left: `${newButtonPositionPercent}%`,
//   });

//   player.seekTo(newPlaybackPositionSec);
// });
// ////^playbackButtonMove////

// function onYouTubeIframeAPIReady() {
//   player = new YT.Player("yt-player", {
//     height: "405",
//     width: "660",
//     videoId: "TxZwqVTaCmA",
//     events: {
//       onReady: onPlayerReady,
//       // onStateChange: onPlayerStateChange
//     },
//     playerVars: {
//       controls: 0,
//       disablekb: 0,
//       shoinfo: 0,
//       rel: 0,
//       autoplay: 0,
//       modestbranding: 0,
//     },
//   });
// }
// let eventsInit = () => {
//   $(".player__start").click((e) => {
//     e.preventDefault();
//     if (playerStart.hasClass("player__start--paused")) {
//       playerStart. oveClass("player__start--paused");
//       playerSplash. oveClass("player__splash--active");
//       player.pauseVideo();
//     } else {
//       playerStart.addClass("player__start--paused");
//       playerSplash.addClass("player__splash--active");
//       player.playVideo();
//     }
//   });
// };
// ////^play/pause////

// eventsInit();

//videoplayer
const player = $("#video-player")[0];
const playerContainer = $(".player");
const playerStart = $(".player__start");
const playerSplash = $(".player__splash");

const formatTime = (timeSec) => {
  const roundTime = Math.round(timeSec);

  const minutes = addZero(Math.floor(roundTime / 60));
  const seconds = addZero(roundTime - minutes * 60);

  function addZero(num) {
    return num < 10 ? `0${num}` : num;
  }

  return `${minutes} : ${seconds}`;
};

const onPlayerReady = () => {
  const durationSec = player.duration;
  console.log(player)

  $(".player__duration-estimate").text(formatTime(durationSec));
  if (typeof interval !== "undefined") {
    clearInterval(interval);
  }
  interval = setInterval(() => {
    const completedSec = player.currentTime;
    const completedPercent = (completedSec / durationSec) * 100;
    $(".player__playback-button").css({
      left: `${completedPercent}%`,
    });
    $(".player__duration-completed").text(formatTime(completedSec));
  }, 1000);
};

$(".player__playback").on('click',(e) => {
  const bar = $(e.currentTarget);
  const clickedPosition = e.originalEvent.layerX;
  const newButtonPositionPercent = (clickedPosition / bar.width()) * 100;
  const newPlaybackPositionSec =
    (player.duration / 100) * newButtonPositionPercent;


  $(".player__playback-button").css({
    left: `${newButtonPositionPercent}%`,
  });

  player.currentTime = newPlaybackPositionSec;
});

let eventsInit = () => {
  $(".player__start").on('click',(e) => {
    e.preventDefault();
    if (playerStart.hasClass("player__start--paused")) {
      playerStart.removeClass("player__start--paused");
      playerSplash.removeClass("player__splash--active");
      player.pause();
    } else {
      playerStart.addClass("player__start--paused");
      playerSplash.addClass("player__splash--active");
      player.play();
    }
  });
};
eventsInit();
onPlayerReady();
// document.addEventListener('DOMContentLoaded', ready);
;const findBlockByAlias = alias =>{
  return $('.reviews__item').filter((ndx,item)=>{
    return $(item).attr('data-linked-with') === alias
  })
}
$('.reviews__link').on('click',e=>{
  e.preventDefault()

  const $this = $(e.currentTarget)
  const target = $this.attr('data-open')
  const itemToShow = findBlockByAlias(target)
  const curItem = $this.closest('.reviews__link')
  itemToShow.addClass('reviews__item--active').siblings().removeClass('reviews__item--active')
  curItem.addClass('reviews__link--active').siblings().removeClass('reviews__link--active')
});let mesure = (content, item) => {
  let titleBox = item.find(".horizontal-slider__title-box");
  let itemsWidth = titleBox.width() * 3;
  const isTablet =
    document.documentElement.clientWidth <= 768 &&
    document.documentElement.clientWidth > 480;
  const isMobile = document.documentElement.clientWidth <= 481;
  if (isTablet) {
    return content.animate({
      width: document.documentElement.clientWidth - itemsWidth,
    });
  }
  if (isMobile) {
    return content.animate({
      width: document.documentElement.clientWidth - titleBox.width(),
    });
  }
  return content.animate({
    width: "520px",
  });
};
$(function () {
  //обрабатываем клик по блоку с классом horizontal-slider__title
  $(".horizontal-slider__title-box").on("click", function (e) {
    e.preventDefault();
    //получаем нужные нам данные
    let $this = $(this),
      //получаем всё блоки list
      container = $this.closest(".horizontal-slider__list"),
      //получаем li по которому кликнули
      item = $this.closest(".horizontal-slider__item"),
      //получаем все другие li
      items = container.find(".horizontal-slider__item"),
      //выбираем из li активный
      activeItem = items.filter(".active"),
      //выбираем из li по которому кликнули блок контен
      content = item.find(".horizontal-slider__content-box"),
      //выбираем у li с классом active блок контент
      activeContent = activeItem.find(".horizontal-slider__content-box");

    //если нет li с классом active по которому кликнули
    if (!item.hasClass("active")) {
      //убираем класс active
      items.removeClass("active");
      //добавляем active кликнутому
      item.addClass("active");
      //у того у кого был active задаём ширину 0
      activeContent.animate({
        width: "0px",
      });
      //кликнутому 530
      mesure(content, item);
      //иначе
    } else {
      item.removeClass("active");
      content.animate({
        width: "0px",
      });
    }
  });

  // клик вне аккордеона
  $(document).on("click", function (e) {
    let $this = $(e.target);
    if (!$this.closest(".horizontal-slider__list").length) {
      $(".horizontal-slider__content-box").animate({
        width: " ",
      });
      $(".horizontal-slider__item").removeClass("active");
    }
  });
});
;const slider = $(".boards__list").bxSlider({
  pager: false,
  controls: false,
});

$(".boards__nav--next").on('click',(e) => {
  e.preventDefault();
  slider.goToNextSlide();
});
$(".boards__nav--prev").on('click',(e) => {
  e.preventDefault();
  slider.goToPrevSlide();
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
